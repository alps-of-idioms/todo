{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-pannel/index.js","components/search-pannel/search-pannel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","todo","done","react_default","a","createElement","className","SearchPanel","state","term","handleSearch","e","_this","setState","target","value","props","searchField","type","placeholder","onChange","this","search","React","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_item_TodoListItem","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clasN","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","addItem","App","todoData","items","length","toLowerCase","indexOf","onSearchChange","toggleProperty","_ref2","text","_ref3","curState","slice","push","createTodoItem","deleteItem","_ref4","indx","findIndex","el","before","splice","ndx","Date","Math","floor","random","_this$state","visibleItems","components_app_header","components_search_pannel","components_item_status_filter","components_todo_list","components_item_add_form","arr","propName","oldItem","newItem","objectSpread","defineProperty","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.cb234978.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\n\nexport default AppHeader;\n","import React from \"react\";\nimport \"./app-header.css\";\n\nconst AppHeader = ({ todo, done }) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>\n        {todo} more to do, {done} done\n      </h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from \"./search-pannel\";\n\nexport default SearchPanel;\n","import React from \"react\";\n\nimport \"./search-pannel.css\";\n\nexport default class SearchPanel extends React.Component {\n  state = {\n    term: \"\"\n  };\n\n  handleSearch = e => {\n    this.setState({\n      term: e.target.value\n    });\n    this.props.searchField(e.target.value);\n  };\n\n  render() {\n    return (\n      <input\n        type=\"text\"\n        className=\"form-control search-input\"\n        placeholder=\"type to search\"\n        onChange={this.handleSearch}\n        value={this.state.search}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./todo-list-item.css\";\n\nexport default class TodoListItem extends Component {\n  render() {\n    const {\n      label,\n      onDeleted,\n      onToggleImportant,\n      onToggleDone,\n      done,\n      important\n    } = this.props;\n\n    let classNames = \"todo-list-item\";\n\n    if (done) {\n      classNames += \" done\";\n    }\n\n    if (important) {\n      classNames += \" important\";\n    }\n\n    return (\n      <span className={classNames}>\n        <span className=\"todo-list-item-label\" onClick={onToggleDone}>\n          {label}\n        </span>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-success btn-sm float-right\"\n          onClick={onToggleImportant}\n        >\n          <i className=\"fa fa-exclamation\" />\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-danger btn-sm float-right\"\n          onClick={onDeleted}\n        >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n}\n","import TodoList from \"./todo-list\";\n\nexport default TodoList;\n","import React from \"react\";\nimport TodoListItem from \"../todo-list-item/todo-list-item\";\nimport \"./todo-list.css\";\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n  const elements = todos.map(item => {\n    const { id, ...itemProps } = item;\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps}\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)}\n        />\n        {/*label={item.label} important={item.important} */}\n      </li>\n    );\n  });\n\n  return <ul className=\"list-group todo-list\">{elements}</ul>;\n};\n\nexport default TodoList;\n","import ItemStatusFilter from \"./item-status-filter\";\n\nexport default ItemStatusFilter;\n","import React, { Component } from \"react\";\n\nimport \"./item-status-filter.css\";\n\nexport default class ItemStatusFilter extends Component {\n  buttons = [\n    { name: \"all\", label: \"All\" },\n    { name: \"active\", label: \"Active\" },\n    { name: \"done\", label: \"Done\" }\n  ];\n\n  render() {\n    const { filter, onFilterChange } = this.props;\n    const buttons = this.buttons.map(({ name, label }) => {\n      const isActive = filter === name;\n      const clasN = isActive ? \"btn-info\" : \"btn-outline-secondary\";\n      return (\n        <button\n          type=\"button\"\n          onClick={() => onFilterChange(name)}\n          className={`btn ${clasN}`}\n          key={name}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return <div className=\"btn-group\">{buttons}</div>;\n  }\n}\n","import ItemAddForm from \"./item-add-form\";\n\nexport default ItemAddForm;\n","import React, { Component } from \"react\";\nimport \"./item-add-form.css\";\n\nexport default class ItemAddForm extends Component {\n  state = {\n    label: \"\"\n  };\n\n  onLabelChange = e => {\n    this.setState({\n      label: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.state.label) {\n      this.props.addItem(this.state.label);\n      this.setState({\n        label: \"\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          onChange={this.onLabelChange}\n          placeholder=\"Add new todo list item\"\n          value={this.state.label}\n        />\n        <button className=\"btn btn-outline-secondary\">Add Item</button>\n      </form>\n    );\n  }\n}\n","import App from \"./app\";\n\nexport default App;\n","import React from \"react\";\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-pannel\";\nimport TodoList from \"../todo-list\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport ItemAddForm from \"../item-add-form\";\n\nimport \"./app.css\";\n\nexport default class App extends React.Component {\n  state = {\n    todoData: [],\n    term: \"\",\n    filter: \"\" // active, all, done\n  };\n\n  createTodoItem(label, ndx) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: +new Date() + Math.floor(Math.random() * 100)\n    };\n  }\n\n  search = (items, term) => {\n    if (term.length === 0) {\n      return items;\n    }\n    return items.filter(\n      item => item.label.toLowerCase().indexOf(term.toLowerCase()) > -1\n    );\n  };\n\n  filter = (items, filter) => {\n    switch (filter) {\n      case \"all\":\n        return items;\n      case \"active\":\n        return items.filter(item => item.done === false);\n      case \"done\":\n        return items.filter(item => item.done === true);\n      default:\n        return items;\n    }\n  };\n\n  onSearchChange = term => {\n    this.setState({\n      term\n    });\n  };\n\n  onFilterChange = filter => {\n    this.setState({\n      filter\n    });\n  };\n\n  render() {\n    const { todoData, term, filter } = this.state;\n    const visibleItems = this.filter(this.search(todoData, term), filter);\n    const todo = this.state.todoData.filter(item => item.done === false).length;\n    return (\n      <div className=\"todo-app\">\n        <AppHeader todo={todo} done={this.state.todoData.length - todo} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel searchField={this.onSearchChange} />\n          <ItemStatusFilter\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n          />\n        </div>\n\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone}\n        />\n        <ItemAddForm addItem={this.addItem} />\n      </div>\n    );\n  }\n  /*\n  handleSearch = text => {\n    if (text.length === 0) {\n      return this.state.todoData;\n    }\n    this.setState(({ todoData }) => {\n      let lowerText = text.toLowerCase();\n      let cloneArr = todoData\n        .slice()\n        .filter(item => item.label.toLowerCase().indexOf(lowerText) !== -1);\n      return {\n        todoData: cloneArr\n      };\n    });\n    console.log(text);\n  };\n*/\n  toggleProperty(arr, id, propName) {\n    const indx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[indx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n    const before = arr.slice();\n    before.splice(indx, 1, newItem);\n    return before;\n  }\n\n  onToggleImportant = id => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, \"important\")\n      };\n    });\n  };\n\n  onToggleDone = id => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, \"done\")\n      };\n    });\n  };\n\n  addItem = text => {\n    this.setState(({ todoData }) => {\n      let curState = todoData.slice();\n      curState.push(this.createTodoItem(text, 3));\n      return {\n        todoData: curState\n      };\n    });\n  };\n\n  deleteItem = id => {\n    this.setState(({ todoData }) => {\n      const indx = todoData.findIndex(el => el.id === id);\n      const before = todoData.slice();\n      before.splice(indx, 1);\n      return {\n        todoData: before\n      };\n    });\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}